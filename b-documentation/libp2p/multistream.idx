MsgSize	libp2p/multistream.html#MsgSize	multistream: MsgSize	
Codec	libp2p/multistream.html#Codec	multistream: Codec	
MSCodec	libp2p/multistream.html#MSCodec	multistream: MSCodec	
Na	libp2p/multistream.html#Na	multistream: Na	
Ls	libp2p/multistream.html#Ls	multistream: Ls	
Matcher	libp2p/multistream.html#Matcher	multistream: Matcher	
MultiStreamError	libp2p/multistream.html#MultiStreamError	multistream: MultiStreamError	
HandlerHolder	libp2p/multistream.html#HandlerHolder	multistream: HandlerHolder	
MultistreamSelect	libp2p/multistream.html#MultistreamSelect	multistream: MultistreamSelect	
new	libp2p/multistream.html#new,typedesc[MultistreamSelect]	multistream: new(T: typedesc[MultistreamSelect]): T:type	
select	libp2p/multistream.html#select,MultistreamSelect,Connection,seq[string]	multistream: select(m: MultistreamSelect; conn: Connection; proto: seq[string]): Future[\n    string]	
select	libp2p/multistream.html#select,MultistreamSelect,Connection,string	multistream: select(m: MultistreamSelect; conn: Connection; proto: string): Future[bool]	
select	libp2p/multistream.html#select,MultistreamSelect,Connection	multistream: select(m: MultistreamSelect; conn: Connection): Future[bool]	
list	libp2p/multistream.html#list,MultistreamSelect,Connection	multistream: list(m: MultistreamSelect; conn: Connection): Future[seq[string]]	
handle	libp2p/multistream.html#handle,MultistreamSelect,Connection,bool	multistream: handle(m: MultistreamSelect; conn: Connection; active: bool = false): Future[\n    void]	
addHandler	libp2p/multistream.html#addHandler,MultistreamSelect,seq[string],LPProtocol,Matcher	multistream: addHandler(m: MultistreamSelect; codecs: seq[string]; protocol: LPProtocol;\n           matcher: Matcher = nil)	
addHandler	libp2p/multistream.html#addHandler,MultistreamSelect,string,LPProtocol,Matcher	multistream: addHandler(m: MultistreamSelect; codec: string; protocol: LPProtocol;\n           matcher: Matcher = nil)	
addHandler	libp2p/multistream.html#addHandler,MultistreamSelect,string,LPProtoHandler,Matcher	multistream: addHandler(m: MultistreamSelect; codec: string; handler: LPProtoHandler;\n           matcher: Matcher = nil)	
