ChronosStreamTrackerName	libp2p/stream/chronosstream.html#ChronosStreamTrackerName	chronosstream: ChronosStreamTrackerName	
ChronosStream	libp2p/stream/chronosstream.html#ChronosStream	chronosstream: ChronosStream	
shortLog	libp2p/stream/chronosstream.html#shortLog,ChronosStream	chronosstream: shortLog(conn: ChronosStream): auto	
formatItIMPL	libp2p/stream/chronosstream.html#formatItIMPL.t,ChronosStream	chronosstream: formatItIMPL(it: ChronosStream): auto	
initStream	libp2p/stream/chronosstream.html#initStream.e,ChronosStream	chronosstream: initStream(s: ChronosStream)	
init	libp2p/stream/chronosstream.html#init,typeChronosStream,StreamTransport,Direction,MultiAddress	chronosstream: init(C: type ChronosStream; client: StreamTransport; dir: Direction;\n     timeout = DefaultChronosStreamTimeout;\n     observedAddr: MultiAddress = MultiAddress()): ChronosStream	
readOnce	libp2p/stream/chronosstream.html#readOnce.e,ChronosStream,pointer,int	chronosstream: readOnce(s: ChronosStream; pbytes: pointer; nbytes: int): Future[int]	
write	libp2p/stream/chronosstream.html#write.e,ChronosStream,seq[byte]	chronosstream: write(s: ChronosStream; msg: seq[byte]): Future[void]	
closed	libp2p/stream/chronosstream.html#closed.e,ChronosStream	chronosstream: closed(s: ChronosStream): bool	
atEof	libp2p/stream/chronosstream.html#atEof.e,ChronosStream	chronosstream: atEof(s: ChronosStream): bool	
closeImpl	libp2p/stream/chronosstream.html#closeImpl.e,ChronosStream	chronosstream: closeImpl(s: ChronosStream): Future[void]	
