ourPoly1305CtmulRun	libp2p/crypto/chacha20poly1305.html#ourPoly1305CtmulRun,pointer,pointer,pointer,int,pointer,int,pointer,pointer,cint	chacha20poly1305: ourPoly1305CtmulRun(key: pointer; iv: pointer; data: pointer; len: int;\n                    aad: pointer; aadLen: int; tag: pointer; ichacha: pointer;\n                    encrypt: cint)	
ChaChaPoly	libp2p/crypto/chacha20poly1305.html#ChaChaPoly	chacha20poly1305: ChaChaPoly	
ChaChaPolyKey	libp2p/crypto/chacha20poly1305.html#ChaChaPolyKey	chacha20poly1305: ChaChaPolyKey	
ChaChaPolyNonce	libp2p/crypto/chacha20poly1305.html#ChaChaPolyNonce	chacha20poly1305: ChaChaPolyNonce	
ChaChaPolyTag	libp2p/crypto/chacha20poly1305.html#ChaChaPolyTag	chacha20poly1305: ChaChaPolyTag	
intoChaChaPolyKey	libp2p/crypto/chacha20poly1305.html#intoChaChaPolyKey,openArray[byte]	chacha20poly1305: intoChaChaPolyKey(s: openArray[byte]): ChaChaPolyKey	
intoChaChaPolyNonce	libp2p/crypto/chacha20poly1305.html#intoChaChaPolyNonce,openArray[byte]	chacha20poly1305: intoChaChaPolyNonce(s: openArray[byte]): ChaChaPolyNonce	
intoChaChaPolyTag	libp2p/crypto/chacha20poly1305.html#intoChaChaPolyTag,openArray[byte]	chacha20poly1305: intoChaChaPolyTag(s: openArray[byte]): ChaChaPolyTag	
encrypt	libp2p/crypto/chacha20poly1305.html#encrypt,type[ChaChaPoly],ChaChaPolyKey,ChaChaPolyNonce,ChaChaPolyTag,openArray[byte],openArray[byte]	chacha20poly1305: encrypt(_: type[ChaChaPoly]; key: ChaChaPolyKey; nonce: ChaChaPolyNonce;\n        tag: var ChaChaPolyTag; data: var openArray[byte]; aad: openArray[byte])	
decrypt	libp2p/crypto/chacha20poly1305.html#decrypt,type[ChaChaPoly],ChaChaPolyKey,ChaChaPolyNonce,ChaChaPolyTag,openArray[byte],openArray[byte]	chacha20poly1305: decrypt(_: type[ChaChaPoly]; key: ChaChaPolyKey; nonce: ChaChaPolyNonce;\n        tag: var ChaChaPolyTag; data: var openArray[byte]; aad: openArray[byte])	
