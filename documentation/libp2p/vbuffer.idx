VBuffer	libp2p/vbuffer.html#VBuffer	vbuffer: VBuffer	
isEmpty	libp2p/vbuffer.html#isEmpty.t,VBuffer	vbuffer: isEmpty(vb: VBuffer): bool	
isEnough	libp2p/vbuffer.html#isEnough.t,VBuffer,int	vbuffer: isEnough(vb: VBuffer; length: int): bool	
high	libp2p/vbuffer.html#high,VBuffer	vbuffer: high(vb: VBuffer): int	
len	libp2p/vbuffer.html#len,VBuffer	vbuffer: len(vb: VBuffer): int	
initVBuffer	libp2p/vbuffer.html#initVBuffer,seq[byte],int	vbuffer: initVBuffer(data: seq[byte]; offset = 0): VBuffer	
initVBuffer	libp2p/vbuffer.html#initVBuffer,openArray[byte],int	vbuffer: initVBuffer(data: openArray[byte]; offset = 0): VBuffer	
initVBuffer	libp2p/vbuffer.html#initVBuffer	vbuffer: initVBuffer(): VBuffer	
writePBVarint	libp2p/vbuffer.html#writePBVarint,VBuffer,PBSomeUVarint	vbuffer: writePBVarint(vb: var VBuffer; value: PBSomeUVarint)	
writeLPVarint	libp2p/vbuffer.html#writeLPVarint,VBuffer,LPSomeUVarint	vbuffer: writeLPVarint(vb: var VBuffer; value: LPSomeUVarint)	
writeVarint	libp2p/vbuffer.html#writeVarint,VBuffer,LPSomeUVarint	vbuffer: writeVarint(vb: var VBuffer; value: LPSomeUVarint)	
writeSeq	libp2p/vbuffer.html#writeSeq,VBuffer,openArray[T]	vbuffer: writeSeq[T: byte | char](vb: var VBuffer; value: openArray[T])	
writeArray	libp2p/vbuffer.html#writeArray,VBuffer,openArray[T]	vbuffer: writeArray[T: byte | char](vb: var VBuffer; value: openArray[T])	
finish	libp2p/vbuffer.html#finish,VBuffer	vbuffer: finish(vb: var VBuffer)	
peekVarint	libp2p/vbuffer.html#peekVarint,VBuffer,LPSomeUVarint	vbuffer: peekVarint(vb: var VBuffer; value: var LPSomeUVarint): int	
peekSeq	libp2p/vbuffer.html#peekSeq,VBuffer,T	vbuffer: peekSeq[T: string | seq[byte]](vb: var VBuffer; value: var T): int	
peekArray	libp2p/vbuffer.html#peekArray,VBuffer,openArray[T]	vbuffer: peekArray[T: char | byte](vb: var VBuffer; value: var openArray[T]): int	
readVarint	libp2p/vbuffer.html#readVarint,VBuffer,LPSomeUVarint	vbuffer: readVarint(vb: var VBuffer; value: var LPSomeUVarint): int	
readSeq	libp2p/vbuffer.html#readSeq,VBuffer,T	vbuffer: readSeq[T: string | seq[byte]](vb: var VBuffer; value: var T): int	
readArray	libp2p/vbuffer.html#readArray,VBuffer,openArray[T]	vbuffer: readArray[T: char | byte](vb: var VBuffer; value: var openArray[T]): int	
`$`	libp2p/vbuffer.html#$,VBuffer	vbuffer: `$`(vb: VBuffer): string	
